$date
   Thu Dec 14 15:22:38 2023
$end
$version
  2023.1
$end
$timescale
  1ps
$end
$scope module recorder_tb $end
$var reg 1 ! clk_in $end
$var reg 1 " rst_in $end
$var reg 1 # audio_valid_in $end
$var reg 1 $ record_in $end
$var reg 8 % audio_in [7:0] $end
$var reg 8 & single_out [7:0] $end
$var reg 1 ' finish $end
$scope module modified_recorder $end
$var wire 1 ( clk_in $end
$var wire 1 ) rst_in $end
$var wire 8 * audio_in [7:0] $end
$var wire 1 + record_in $end
$var wire 1 , audio_valid_in $end
$var reg 8 & single_out [7:0] $end
$var reg 1 ' finish $end
$var reg 16 - w_address [15:0] $end
$var reg 16 . w_int_address [15:0] $end
$var reg 16 / reset_address [15:0] $end
$var reg 16 0 r_address [15:0] $end
$var reg 16 1 cycle_delay [15:0] $end
$var reg 16 2 delay [15:0] $end
$var reg 8 3 audio_in_final [7:0] $end
$var reg 1 4 write_signal $end
$var reg 16 5 single_address [15:0] $end
$var reg 16 6 largest_address [15:0] $end
$var reg 8 7 out [7:0] $end
$var reg 8 8 single [7:0] $end
$scope module audio_buffer $end
$var wire 15 9 addra [14:0] $end
$var wire 15 : addrb [14:0] $end
$var wire 8 ; dina [7:0] $end
$var wire 8 < dinb [7:0] $end
$var wire 1 ( clka $end
$var wire 1 ( clkb $end
$var wire 1 = wea $end
$var wire 1 > web $end
$var wire 1 ? ena $end
$var wire 1 @ enb $end
$var wire 1 ) rsta $end
$var wire 1 ) rstb $end
$var wire 1 A regcea $end
$var wire 1 B regceb $end
$var wire 8 C douta [7:0] $end
$var wire 8 D doutb [7:0] $end
$var reg 8 E ram_data_a [7:0] $end
$var reg 8 F ram_data_b [7:0] $end
$var integer 32 G \init_bram_to_zero.ram_index  [31:0] $end
$var integer 32 H idx [31:0] $end
$var reg 8 I \output_register.douta_reg  [7:0] $end
$var reg 8 J \output_register.doutb_reg  [7:0] $end
$upscope $end
$upscope $end
$scope begin Block42_11 $end
$var reg 32 K i [31:0] $end
$upscope $end
$scope begin Block48_12 $end
$var reg 32 L i [31:0] $end
$upscope $end
$scope begin Block54_13 $end
$var reg 32 M i [31:0] $end
$upscope $end
$scope begin Block61_14 $end
$var reg 32 N i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
0#
0$
bx %
bx &
0'
0(
0)
bx *
0+
0,
bx -
bx .
bx /
bx 0
bx 1
bx 2
bx 3
04
bx 5
bx 6
b0 7
bx 8
bx 9
bx :
bx ;
bz <
0=
0>
1?
1@
1A
1B
b0 C
b0 D
b0 E
b0 F
b100011001010000 G
b100011001010000 H
b0 I
b0 J
b0 K
b0 L
b0 M
b0 N
$end
#5000
1!
1(
bx E
bx F
#10000
0!
1"
0(
1)
b0 3
14
b0 ;
1=
#15000
1!
1(
b0 .
b0 0
b0 1
b0 2
b0 5
b0 :
#20000
0!
0"
1#
1$
b0 %
0(
0)
b0 *
1+
1,
b0 -
b0 9
#25000
1!
1(
b1 -
b1 .
b0 /
b0 6
bx 7
b1 9
bx C
bx D
b0 E
b0 F
bx I
bx J
#30000
0!
b1 %
0(
b1 *
b1 3
b1 6
b1 ;
b1 K
#35000
1!
1(
b10 -
b10 .
b0 7
b10 9
b0 C
b0 D
b0 I
b0 J
#40000
0!
b10 %
0(
b10 *
b10 3
b10 6
b10 ;
b10 K
#45000
1!
1(
b11 -
b11 .
b11 9
#50000
0!
b11 %
0(
b11 *
b11 3
b11 6
b11 ;
b11 K
#55000
1!
1(
b100 -
b100 .
b100 9
#60000
0!
b100 %
0(
b100 *
b100 3
b100 6
b100 ;
b100 K
#65000
1!
1(
b101 -
b101 .
b101 9
#70000
0!
b101 %
0(
b101 *
b101 3
b101 6
b101 ;
b101 K
#75000
1!
1(
b110 -
b110 .
b110 9
#80000
0!
b110 %
0(
b110 *
b110 3
b110 6
b110 ;
b110 K
#85000
1!
1(
b111 -
b111 .
b111 9
#90000
0!
b111 %
0(
b111 *
b111 3
b111 6
b111 ;
b111 K
#95000
1!
1(
b1000 -
b1000 .
b1000 9
#100000
0!
b1000 %
0(
b1000 *
b1000 3
b1000 6
b1000 ;
b1000 K
#105000
1!
1(
b1001 -
b1001 .
b1001 9
#110000
0!
b1001 %
0(
b1001 *
b1001 3
b1001 6
b1001 ;
b1001 K
#115000
1!
1(
b1010 -
b1010 .
b1010 9
#120000
0!
b1010 %
0(
b1010 *
b1010 3
b1010 6
b1010 ;
b1010 K
#125000
1!
1(
b1011 -
b1011 .
b1011 9
#130000
0!
b1011 %
0(
b1011 *
b1011 3
b1011 6
b1011 ;
b1011 K
#135000
1!
1(
b1100 -
b1100 .
b1100 9
#140000
0!
b1100 %
0(
b1100 *
b1100 3
b1100 6
b1100 ;
b1100 K
#145000
1!
1(
b1101 -
b1101 .
b1101 9
#150000
0!
b1101 %
0(
b1101 *
b1101 3
b1101 6
b1101 ;
b1101 K
#155000
1!
1(
b1110 -
b1110 .
b1110 9
#160000
0!
b1110 %
0(
b1110 *
b1110 3
b1110 6
b1110 ;
b1110 K
#165000
1!
1(
b1111 -
b1111 .
b1111 9
#170000
0!
b1111 %
0(
b1111 *
b1111 3
b1111 6
b1111 ;
b1111 K
#175000
1!
1(
b10000 -
b10000 .
b10000 9
#180000
0!
b10000 %
0(
b10000 *
b10000 3
b10000 6
b10000 ;
b10000 K
#185000
1!
1(
b10001 -
b10001 .
b10001 9
#190000
0!
b10001 %
0(
b10001 *
b10001 3
b10001 6
b10001 ;
b10001 K
#195000
1!
1(
b10010 -
b10010 .
b10010 9
#200000
0!
b10010 %
0(
b10010 *
b10010 3
b10010 6
b10010 ;
b10010 K
#205000
1!
1(
b10011 -
b10011 .
b10011 9
#210000
0!
b10011 %
0(
b10011 *
b10011 3
b10011 6
b10011 ;
b10011 K
#215000
1!
1(
b10100 -
b10100 .
b10100 9
#220000
0!
b10100 %
0(
b10100 *
b10100 3
b10100 6
b10100 ;
b10100 K
#225000
1!
1(
b10101 -
b10101 .
b10101 9
#230000
0!
b10101 %
0(
b10101 *
b10101 3
b10101 6
b10101 ;
b10101 K
#235000
1!
1(
b10110 -
b10110 .
b10110 9
#240000
0!
b10110 %
0(
b10110 *
b10110 3
b10110 6
b10110 ;
b10110 K
#245000
1!
1(
b10111 -
b10111 .
b10111 9
#250000
0!
b10111 %
0(
b10111 *
b10111 3
b10111 6
b10111 ;
b10111 K
#255000
1!
1(
b11000 -
b11000 .
b11000 9
#260000
0!
b11000 %
0(
b11000 *
b11000 3
b11000 6
b11000 ;
b11000 K
#265000
1!
1(
b11001 -
b11001 .
b11001 9
#270000
0!
b11001 %
0(
b11001 *
b11001 3
b11001 6
b11001 ;
b11001 K
#275000
1!
1(
b11010 -
b11010 .
b11010 9
#280000
0!
b11010 %
0(
b11010 *
b11010 3
b11010 6
b11010 ;
b11010 K
#285000
1!
1(
b11011 -
b11011 .
b11011 9
#290000
0!
b11011 %
0(
b11011 *
b11011 3
b11011 6
b11011 ;
b11011 K
#295000
1!
1(
b11100 -
b11100 .
b11100 9
#300000
0!
b11100 %
0(
b11100 *
b11100 3
b11100 6
b11100 ;
b11100 K
#305000
1!
1(
b11101 -
b11101 .
b11101 9
#310000
0!
b11101 %
0(
b11101 *
b11101 3
b11101 6
b11101 ;
b11101 K
#315000
1!
1(
b11110 -
b11110 .
b11110 9
#320000
0!
b11110 %
0(
b11110 *
b11110 3
b11110 6
b11110 ;
b11110 K
#325000
1!
1(
b11111 -
b11111 .
b11111 9
#330000
0!
b11111 %
0(
b11111 *
b11111 3
b11111 6
b11111 ;
b11111 K
#335000
1!
1(
b100000 -
b100000 .
b100000 9
#340000
0!
b100000 %
0(
b100000 *
b100000 3
b100000 6
b100000 ;
b100000 K
#345000
1!
1(
b100001 -
b100001 .
b100001 9
#350000
0!
b100001 %
0(
b100001 *
b100001 3
b100001 6
b100001 ;
b100001 K
#355000
1!
1(
b100010 -
b100010 .
b100010 9
#360000
0!
b100010 %
0(
b100010 *
b100010 3
b100010 6
b100010 ;
b100010 K
#365000
1!
1(
b100011 -
b100011 .
b100011 9
#370000
0!
b100011 %
0(
b100011 *
b100011 3
b100011 6
b100011 ;
b100011 K
#375000
1!
1(
b100100 -
b100100 .
b100100 9
#380000
0!
b100100 %
0(
b100100 *
b100100 3
b100100 6
b100100 ;
b100100 K
#385000
1!
1(
b100101 -
b100101 .
b100101 9
#390000
0!
b100101 %
0(
b100101 *
b100101 3
b100101 6
b100101 ;
b100101 K
#395000
1!
1(
b100110 -
b100110 .
b100110 9
#400000
0!
b100110 %
0(
b100110 *
b100110 3
b100110 6
b100110 ;
b100110 K
#405000
1!
1(
b100111 -
b100111 .
b100111 9
#410000
0!
b100111 %
0(
b100111 *
b100111 3
b100111 6
b100111 ;
b100111 K
#415000
1!
1(
b101000 -
b101000 .
b101000 9
#420000
0!
b101000 %
0(
b101000 *
b101000 3
b101000 6
b101000 ;
b101000 K
#425000
1!
1(
b101001 -
b101001 .
b101001 9
#430000
0!
b101001 %
0(
b101001 *
b101001 3
b101001 6
b101001 ;
b101001 K
#435000
1!
1(
b101010 -
b101010 .
b101010 9
#440000
0!
b101010 %
0(
b101010 *
b101010 3
b101010 6
b101010 ;
b101010 K
#445000
1!
1(
b101011 -
b101011 .
b101011 9
#450000
0!
b101011 %
0(
b101011 *
b101011 3
b101011 6
b101011 ;
b101011 K
#455000
1!
1(
b101100 -
b101100 .
b101100 9
#460000
0!
b101100 %
0(
b101100 *
b101100 3
b101100 6
b101100 ;
b101100 K
#465000
1!
1(
b101101 -
b101101 .
b101101 9
#470000
0!
b101101 %
0(
b101101 *
b101101 3
b101101 6
b101101 ;
b101101 K
#475000
1!
1(
b101110 -
b101110 .
b101110 9
#480000
0!
b101110 %
0(
b101110 *
b101110 3
b101110 6
b101110 ;
b101110 K
#485000
1!
1(
b101111 -
b101111 .
b101111 9
#490000
0!
b101111 %
0(
b101111 *
b101111 3
b101111 6
b101111 ;
b101111 K
#495000
1!
1(
b110000 -
b110000 .
b110000 9
#500000
0!
b110000 %
0(
b110000 *
b110000 3
b110000 6
b110000 ;
b110000 K
#505000
1!
1(
b110001 -
b110001 .
b110001 9
#510000
0!
b110001 %
0(
b110001 *
b110001 3
b110001 6
b110001 ;
b110001 K
#515000
1!
1(
b110010 -
b110010 .
b110010 9
#520000
0!
b110010 %
0(
b110010 *
b110010 3
b110010 6
b110010 ;
b110010 K
#525000
1!
1(
b110011 -
b110011 .
b110011 9
#530000
0!
b110011 %
0(
b110011 *
b110011 3
b110011 6
b110011 ;
b110011 K
#535000
1!
1(
b110100 -
b110100 .
b110100 9
#540000
0!
b110100 %
0(
b110100 *
b110100 3
b110100 6
b110100 ;
b110100 K
#545000
1!
1(
b110101 -
b110101 .
b110101 9
#550000
0!
b110101 %
0(
b110101 *
b110101 3
b110101 6
b110101 ;
b110101 K
#555000
1!
1(
b110110 -
b110110 .
b110110 9
#560000
0!
b110110 %
0(
b110110 *
b110110 3
b110110 6
b110110 ;
b110110 K
#565000
1!
1(
b110111 -
b110111 .
b110111 9
#570000
0!
b110111 %
0(
b110111 *
b110111 3
b110111 6
b110111 ;
b110111 K
#575000
1!
1(
b111000 -
b111000 .
b111000 9
#580000
0!
b111000 %
0(
b111000 *
b111000 3
b111000 6
b111000 ;
b111000 K
#585000
1!
1(
b111001 -
b111001 .
b111001 9
#590000
0!
b111001 %
0(
b111001 *
b111001 3
b111001 6
b111001 ;
b111001 K
#595000
1!
1(
b111010 -
b111010 .
b111010 9
#600000
0!
b111010 %
0(
b111010 *
b111010 3
b111010 6
b111010 ;
b111010 K
#605000
1!
1(
b111011 -
b111011 .
b111011 9
#610000
0!
b111011 %
0(
b111011 *
b111011 3
b111011 6
b111011 ;
b111011 K
#615000
1!
1(
b111100 -
b111100 .
b111100 9
#620000
0!
b111100 %
0(
b111100 *
b111100 3
b111100 6
b111100 ;
b111100 K
#625000
1!
1(
b111101 -
b111101 .
b111101 9
#630000
0!
b111101 %
0(
b111101 *
b111101 3
b111101 6
b111101 ;
b111101 K
#635000
1!
1(
b111110 -
b111110 .
b111110 9
#640000
0!
b111110 %
0(
b111110 *
b111110 3
b111110 6
b111110 ;
b111110 K
#645000
1!
1(
b111111 -
b111111 .
b111111 9
#650000
0!
b111111 %
0(
b111111 *
b111111 3
b111111 6
b111111 ;
b111111 K
#655000
1!
1(
b1000000 -
b1000000 .
b1000000 9
#660000
0!
b1000000 %
0(
b1000000 *
b1000000 3
b1000000 6
b1000000 ;
b1000000 K
#665000
1!
1(
b1000001 -
b1000001 .
b1000001 9
#670000
0!
b1000001 %
0(
b1000001 *
b1000001 3
b1000001 6
b1000001 ;
b1000001 K
#675000
1!
1(
b1000010 -
b1000010 .
b1000010 9
#680000
0!
b1000010 %
0(
b1000010 *
b1000010 3
b1000010 6
b1000010 ;
b1000010 K
#685000
1!
1(
b1000011 -
b1000011 .
b1000011 9
#690000
0!
b1000011 %
0(
b1000011 *
b1000011 3
b1000011 6
b1000011 ;
b1000011 K
#695000
1!
1(
b1000100 -
b1000100 .
b1000100 9
#700000
0!
b1000100 %
0(
b1000100 *
b1000100 3
b1000100 6
b1000100 ;
b1000100 K
#705000
1!
1(
b1000101 -
b1000101 .
b1000101 9
#710000
0!
b1000101 %
0(
b1000101 *
b1000101 3
b1000101 6
b1000101 ;
b1000101 K
#715000
1!
1(
b1000110 -
b1000110 .
b1000110 9
#720000
0!
b1000110 %
0(
b1000110 *
b1000110 3
b1000110 6
b1000110 ;
b1000110 K
#725000
1!
1(
b1000111 -
b1000111 .
b1000111 9
#730000
0!
b1000111 %
0(
b1000111 *
b1000111 3
b1000111 6
b1000111 ;
b1000111 K
#735000
1!
1(
b1001000 -
b1001000 .
b1001000 9
#740000
0!
b1001000 %
0(
b1001000 *
b1001000 3
b1001000 6
b1001000 ;
b1001000 K
#745000
1!
1(
b1001001 -
b1001001 .
b1001001 9
#750000
0!
b1001001 %
0(
b1001001 *
b1001001 3
b1001001 6
b1001001 ;
b1001001 K
#755000
1!
1(
b1001010 -
b1001010 .
b1001010 9
#760000
0!
b1001010 %
0(
b1001010 *
b1001010 3
b1001010 6
b1001010 ;
b1001010 K
#765000
1!
1(
b1001011 -
b1001011 .
b1001011 9
#770000
0!
b1001011 %
0(
b1001011 *
b1001011 3
b1001011 6
b1001011 ;
b1001011 K
#775000
1!
1(
b1001100 -
b1001100 .
b1001100 9
#780000
0!
b1001100 %
0(
b1001100 *
b1001100 3
b1001100 6
b1001100 ;
b1001100 K
#785000
1!
1(
b1001101 -
b1001101 .
b1001101 9
#790000
0!
b1001101 %
0(
b1001101 *
b1001101 3
b1001101 6
b1001101 ;
b1001101 K
#795000
1!
1(
b1001110 -
b1001110 .
b1001110 9
#800000
0!
b1001110 %
0(
b1001110 *
b1001110 3
b1001110 6
b1001110 ;
b1001110 K
#805000
1!
1(
b1001111 -
b1001111 .
b1001111 9
#810000
0!
b1001111 %
0(
b1001111 *
b1001111 3
b1001111 6
b1001111 ;
b1001111 K
#815000
1!
1(
b1010000 -
b1010000 .
b1010000 9
#820000
0!
b1010000 %
0(
b1010000 *
b1010000 3
b1010000 6
b1010000 ;
b1010000 K
#825000
1!
1(
b1010001 -
b1010001 .
b1010001 9
#830000
0!
b1010001 %
0(
b1010001 *
b1010001 3
b1010001 6
b1010001 ;
b1010001 K
#835000
1!
1(
b1010010 -
b1010010 .
b1010010 9
#840000
0!
b1010010 %
0(
b1010010 *
b1010010 3
b1010010 6
b1010010 ;
b1010010 K
#845000
1!
1(
b1010011 -
b1010011 .
b1010011 9
#850000
0!
b1010011 %
0(
b1010011 *
b1010011 3
b1010011 6
b1010011 ;
b1010011 K
#855000
1!
1(
b1010100 -
b1010100 .
b1010100 9
#860000
0!
b1010100 %
0(
b1010100 *
b1010100 3
b1010100 6
b1010100 ;
b1010100 K
#865000
1!
1(
b1010101 -
b1010101 .
b1010101 9
#870000
0!
b1010101 %
0(
b1010101 *
b1010101 3
b1010101 6
b1010101 ;
b1010101 K
#875000
1!
1(
b1010110 -
b1010110 .
b1010110 9
#880000
0!
b1010110 %
0(
b1010110 *
b1010110 3
b1010110 6
b1010110 ;
b1010110 K
#885000
1!
1(
b1010111 -
b1010111 .
b1010111 9
#890000
0!
b1010111 %
0(
b1010111 *
b1010111 3
b1010111 6
b1010111 ;
b1010111 K
#895000
1!
1(
b1011000 -
b1011000 .
b1011000 9
#900000
0!
b1011000 %
0(
b1011000 *
b1011000 3
b1011000 6
b1011000 ;
b1011000 K
#905000
1!
1(
b1011001 -
b1011001 .
b1011001 9
#910000
0!
b1011001 %
0(
b1011001 *
b1011001 3
b1011001 6
b1011001 ;
b1011001 K
#915000
1!
1(
b1011010 -
b1011010 .
b1011010 9
#920000
0!
b1011010 %
0(
b1011010 *
b1011010 3
b1011010 6
b1011010 ;
b1011010 K
#925000
1!
1(
b1011011 -
b1011011 .
b1011011 9
#930000
0!
b1011011 %
0(
b1011011 *
b1011011 3
b1011011 6
b1011011 ;
b1011011 K
#935000
1!
1(
b1011100 -
b1011100 .
b1011100 9
#940000
0!
b1011100 %
0(
b1011100 *
b1011100 3
b1011100 6
b1011100 ;
b1011100 K
#945000
1!
1(
b1011101 -
b1011101 .
b1011101 9
#950000
0!
b1011101 %
0(
b1011101 *
b1011101 3
b1011101 6
b1011101 ;
b1011101 K
#955000
1!
1(
b1011110 -
b1011110 .
b1011110 9
#960000
0!
b1011110 %
0(
b1011110 *
b1011110 3
b1011110 6
b1011110 ;
b1011110 K
#965000
1!
1(
b1011111 -
b1011111 .
b1011111 9
#970000
0!
b1011111 %
0(
b1011111 *
b1011111 3
b1011111 6
b1011111 ;
b1011111 K
#975000
1!
1(
b1100000 -
b1100000 .
b1100000 9
#980000
0!
b1100000 %
0(
b1100000 *
b1100000 3
b1100000 6
b1100000 ;
b1100000 K
#985000
1!
1(
b1100001 -
b1100001 .
b1100001 9
#990000
0!
b1100001 %
0(
b1100001 *
b1100001 3
b1100001 6
b1100001 ;
b1100001 K
#995000
1!
1(
b1100010 -
b1100010 .
b1100010 9
#1000000
0!
b1100010 %
0(
b1100010 *
b1100010 3
b1100010 6
b1100010 ;
b1100010 K
